services:
  nginx:
    build:
      # El contexto ahora es la raíz del proyecto
      context: ..
      dockerfile: docker/Dockerfile.nginx
    ports:
      - "80:80"
    volumes:
      - ../frontend:/usr/share/nginx/html
    depends_on:
      - backend
    networks:
      - tdc_network

  backend:
    build:
      # El contexto también es la raíz del proyecto
      context: ..
      dockerfile: docker/Dockerfile.backend
    depends_on:
      mariadb:
        condition: service_healthy # Espera hasta que el healthcheck de mariadb pase
    environment:
      DB_HOST: mariadb
      DB_USER: rodrigo
      DB_PASSWORD: desa8102test
      DB_NAME: tdc_db
      PORT: 3000
    ports:
      - "3000:3000"
    networks:
      - tdc_network
    volumes:
      # ¡ESTA ES LA RUTA CORREGIDA Y ROBUSTA!
      # La ruta es relativa al archivo docker-compose.yml.
      # Para apuntar a la carpeta `backend` en la raíz, usamos `../backend`.
      - ../backend:/app
      # Este volumen anónimo sigue siendo crucial para proteger node_modules.
      - /app/node_modules

  mariadb:
    image: mariadb:10.6
    command:
      - '--max_allowed_packet=64M'
    healthcheck:
      # El 'test' ahora usa las variables del archivo .env
      test: [ "CMD", "mariadb-admin", "ping", "-h", "localhost", "-u", "${MARIADB_USER}", "-p${MARIADB_PASSWORD}" ]
      interval: 10s
      timeout: 5s
      retries: 10 # Aumentamos los reintentos
    ports:
      - "3306:3306"
    # El 'environment' también se lee del .env
    volumes:
      - mariadb_data:/var/lib/mysql
      # Usamos rutas relativas explícitas desde la raíz del proyecto
      - ../database/1_schema.sql:/docker-entrypoint-initdb.d/1_schema.sql
      - ../database/2_seed.sql:/docker-entrypoint-initdb.d/2_seed.sql
      - ../database/3_restore_sensitive.sh:/docker-entrypoint-initdb.d/3_restore_sensitive.sh
      - ../data_migration/datos_sensibles_backup.sql:/var/lib/mysql-files/datos_sensibles_backup.sql
      - ../database/seeds:/var/lib/mysql-files

# Definición de redes
networks:
  tdc_network:
    driver: bridge

# Definición de volúmenes persistentes
volumes:
  mariadb_data:
